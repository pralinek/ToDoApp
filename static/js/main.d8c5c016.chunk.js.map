{"version":3,"sources":["components/AddTask.js","components/Todo.js","App.js","index.js"],"names":["AddTask","addTask","counterChange","useState","taskName","setTaskName","className","onSubmit","e","preventDefault","type","value","required","onChange","target","autoFocus","style","color","Todo","taskList","setTaskList","useEffect","document","title","fetch","then","request","json","apilist","arr","length","r","Math","floor","random","indexOf","push","array","i","map","obj","index","icon","userId","id","completed","round","Date","getTime","task","onClick","deletionTaskList","filter","completionTaskList","handleComplete","backgroundColor","textDecoration","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d8c5c016.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './AddTask.css'\r\n\r\nconst AddTask = ({addTask, counterChange}) =>{\r\n    const [taskName, setTaskName] = useState(\"\")\r\n \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        addTask(taskName)\r\n        setTaskName(\"\")\r\n    }\r\n    \r\n    return (\r\n           \r\n            <div className=\"addtask\">\r\n            \r\n            \r\n            <form onSubmit={handleSubmit}>\r\n            <h1 className=\"title\">To Do</h1>\r\n            <input type=\"text\"  value={taskName} required onChange={(e)=>{setTaskName(e.target.value)}} autoFocus/>\r\n            <button type=\"submit\" className=\"submit\"><span className=\"plus\"> </span></button>\r\n            <div className=\"lettert\"></div>\r\n            <div className=\"lettero\"></div>\r\n            <div className={counterChange>9 ? \"none\": \"letterd\"}>D</div>\r\n            <span className=\"letteroo\"\r\n                style={{color:`${\r\n                          counterChange === 0\r\n                            ? \"#00A19D\"\r\n                            : counterChange === 1\r\n                            ? \"#FFB344\"\r\n                            : counterChange === 2\r\n                            ? \"#E05D5D\"\r\n                            : counterChange === 3\r\n                            ? \"#3DB2FF\"\r\n                            : counterChange === 4\r\n                            ? \"#22577A\"\r\n                            : counterChange === 5\r\n                            ? \"#C36839\"\r\n                            : counterChange === 6\r\n                            ? \"#E02401\"\r\n                            : counterChange === 7\r\n                            ? \"#F78812\"\r\n                            : counterChange === 8\r\n                            ? \"#4AA96C\"\r\n                            : counterChange === 9\r\n                            ? \"#FF4C29\"\r\n                            : counterChange > 9\r\n                            ? \"white\" : ''\r\n                        }`\r\n\r\n                  }}>{counterChange}</span>\r\n       \r\n            \r\n         \r\n            </form>\r\n            \r\n            </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default AddTask;","import React, { useEffect, useState } from \"react\";\r\nimport AddTask from \"./AddTask\";\r\n\r\nimport \"./Todo.css\";\r\n\r\nconst Todo = () => {\r\n  const [taskList, setTaskList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    document.title = \"ToDoApp\"\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos\")\r\n      .then((request) => {\r\n        return request.json();\r\n      })\r\n      .then((apilist) => {\r\n        let arr = [];\r\n        while (arr.length < 8) {\r\n          var r = Math.floor(Math.random() * 100) + 1;\r\n          if (arr.indexOf(r) === -1) arr.push(r);\r\n        }\r\n        let array = [];\r\n        for (let i = 0; i < 7; i++) {\r\n          array.push(apilist[arr[i]]);\r\n        }\r\n\r\n        array = array.map((obj, index) => {\r\n          return {\r\n            color: index,\r\n            icon: index,\r\n            userId: obj.userId,\r\n            title: obj.title,\r\n            id: obj.id,\r\n            completed: false,\r\n          };\r\n        });\r\n\r\n        setTaskList(array);\r\n      });\r\n  }, []);\r\n\r\n  const addTask = (taskName) => {\r\n    setTaskList([\r\n      {\r\n        color: Math.round(Math.random() * 6),\r\n        icon: Math.round(Math.random() * 6),\r\n        userId: Math.round(Math.random() * 10),\r\n        id: new Date().getTime(),\r\n        title: taskName,\r\n        completed: false,\r\n      },\r\n      ...taskList,\r\n    ]);\r\n    //tasklist.length is bad idea for key value, maybe miliseconds.\r\n  };\r\n\r\n  const handleComplete = (id, e) => {\r\n    if (e.target.value === \"delete\") {\r\n      const deletionTaskList = taskList.filter((task) => {\r\n        return task.id !== id;\r\n      });\r\n      setTaskList(deletionTaskList);\r\n    } else {\r\n      const completionTaskList = taskList.map((obj) =>\r\n        obj.id === id\r\n          ? {\r\n              color: obj.color,\r\n              icon: obj.icon,\r\n              userId: obj.userId,\r\n              title: obj.title,\r\n              id: obj.id,\r\n              completed: !obj.completed,\r\n            }\r\n          : obj\r\n      );\r\n\r\n      setTaskList(completionTaskList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"transparent\">\r\n        <div className=\"circle\"> </div> <div className=\"circle2\"> </div>\r\n        {true && (\r\n          <AddTask addTask={addTask} counterChange={taskList.length} />\r\n        )}{\" \"}\r\n        {taskList.map((task) => {\r\n          return (\r\n            <div\r\n              onClick={(e) => {\r\n                handleComplete(task.id, e);\r\n              }}\r\n              className=\"card\"\r\n              style={{\r\n                backgroundColor: task.completed\r\n                  ? \"\"\r\n                  : `${\r\n                      task.icon === 0\r\n                        ? \"#00A19D\"\r\n                        : task.icon === 1\r\n                        ? \"#FFB344\"\r\n                        : task.icon === 2\r\n                        ? \"#E05D5D\"\r\n                        : task.icon === 3\r\n                        ? \"#112031\"\r\n                        : task.icon === 4\r\n                        ? \"#22577A\"\r\n                        : task.icon === 5\r\n                        ? \"#C36839\"\r\n                        : task.icon === 6\r\n                        ? \"#911F27\"\r\n                        : \"#5C6D70\"\r\n                    }`,\r\n                    textDecoration: task.completed ? \"line-through\": \"\",\r\n                    color: \"white\",\r\n              }}\r\n              key={task.id}\r\n            >\r\n              <div>\r\n                <p\r\n                  className={\r\n                    task.icon === 0\r\n                      ? \"bebas\"\r\n                      : task.icon === 1\r\n                      ? \"im\"\r\n                      : task.icon === 2\r\n                      ? \"it\"\r\n                      : task.icon === 3\r\n                      ? \"lobster\"\r\n                      : task.icon === 4\r\n                      ? \"pt\"\r\n                      : task.icon === 5\r\n                      ? \"qahiri\"\r\n                      : task.icon === 6\r\n                      ? \"roboto\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  {\" \"}\r\n                  {task.title}{\" \"}\r\n                </p>{\" \"}\r\n                <button value=\"delete\" className=\"delete\">\r\n                  {\" \"}\r\n                  <span className=\"cross\"> </span>\r\n                </button>\r\n              </div>{\" \"}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import './App.css';\r\nimport Todo from './components/Todo'\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    \r\n      <Todo />\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}